{"version":3,"sources":["components/Home.js","components/ImageGrid.js","components/Doodles.js","components/Error.js","components/Navigation.js","components/Food.js","components/Current.js","components/App.js","serviceWorker.js","index.js"],"names":["Home","React","Component","IMAGES","src","thumbnail","thumbnailWidth","thumbnailHeight","caption","tags","value","title","ImageGrid","style","display","margin","minHeight","width","overflow","images","enableImageSelection","Doodles","Error","Navigation","props","state","menu","toggleMenu","bind","this","setState","show","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","onClick","id","window","location","pathname","Food","Current","App","path","component","exact","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6480f34a.chunk.js","sourcesContent":["import React from 'react';\n\nclass Home extends React.Component {\n  render() {\n    return (\n        <div>\n            <h1>hElLo wOrlD üëΩ</h1>\n            <p>Welcome to a site of random things made by me.</p>\n        </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport Gallery from 'react-grid-gallery';\n\nconst IMAGES = [{\n  src: \"https://c2.staticflickr.com/9/8817/28973449265_07e3aa5d2e_b.jpg\",\n  thumbnail: \"https://c2.staticflickr.com/9/8817/28973449265_07e3aa5d2e_n.jpg\",\n  thumbnailWidth: 320,\n  thumbnailHeight: 174,\n  caption: \"After Rain (Jeshu John - designerspics.com)\"\n},\n{\n  src: \"https://c2.staticflickr.com/9/8356/28897120681_3b2c0f43e0_b.jpg\",\n  thumbnail: \"https://c2.staticflickr.com/9/8356/28897120681_3b2c0f43e0_n.jpg\",\n  thumbnailWidth: 320,\n  thumbnailHeight: 212,\n  tags: [{value: \"Ocean\", title: \"Ocean\"}, {value: \"People\", title: \"People\"}],\n  caption: \"Boats (Jeshu John - designerspics.com)\"\n},\n\n{\n  src: \"https://c4.staticflickr.com/9/8887/28897124891_98c4fdd82b_b.jpg\",\n  thumbnail: \"https://c4.staticflickr.com/9/8887/28897124891_98c4fdd82b_n.jpg\",\n  thumbnailWidth: 320,\n  thumbnailHeight: 212\n}]\n\nclass ImageGrid extends React.Component {\n  render() {\n    return (\n        <div style={{\n          display: \"block\",\n          margin: \"auto\",\n          minHeight: \"1px\",\n          width: \"90%\",\n          overflow: \"auto\"}}>\n            <Gallery images={IMAGES} enableImageSelection={false} />\n        </div>\n    );\n  }\n}\n\nexport default ImageGrid;\n","import React from 'react';\nimport ImageGrid from './ImageGrid';\n\nclass Doodles extends React.Component {\n  render() {\n    return (\n        <div>\n            <h1>DOOOOOODLES</h1>\n            <p>wow look at all this ~art~üë©üèæ‚Äçüé®</p>\n            <ImageGrid></ImageGrid>\n        </div>\n    );\n  }\n}\n\nexport default Doodles;\n","import React from 'react';\n\nclass Error extends React.Component {\n  render() {\n    return (\n        <div>\n            <h1>Oops</h1>\n            <p>This page does not exist!</p>\n        </div>\n    );\n  }\n}\n\nexport default Error;\n","import React from 'react';\n\nclass Navigation extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            menu: false\n        };\n        this.toggleMenu = this.toggleMenu.bind(this);\n    }\n\n    toggleMenu(){\n        this.setState({ menu: !this.state.menu })\n    }\n\n  render() {\n    const show = (this.state.menu) ? \"show\" : \"\" ;\n    return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <a className=\"navbar-brand\" href=\"/ByMeForMe\">ByMeForMe</a>\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" onClick={this.toggleMenu}>\n            <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className={\"collapse navbar-collapse \" + show} id=\"navbarNav\">\n            <ul className=\"navbar-nav mr-auto\">\n                <li className={window.location.pathname===\"/ByMeForMe\" ? 'nav-item active' : 'nav-item'}>\n                    <a className=\"nav-link\" href=\"/ByMeForMe\">Home <span className=\"sr-only\">(current)</span></a>\n                </li>\n                <li className={window.location.pathname===\"/ByMeForMe/doodles\" ? 'nav-item active' : 'nav-item'}>\n                    <a className=\"nav-link\" href=\"/ByMeForMe/doodles\">Doodles</a>\n                </li>\n                <li className={window.location.pathname===\"/ByMeForMe/food\" ? 'nav-item active' : 'nav-item'}>\n                    <a className=\"nav-link\" href=\"/ByMeForMe/food\">Food</a>\n                </li>\n                <li className={window.location.pathname===\"/ByMeForMe/current\" ? 'nav-item active' : 'nav-item'}>\n                    <a className=\"nav-link\" href=\"/ByMeForMe/current\">Current Events</a>\n                </li>\n            </ul>\n        </div>\n    </nav>\n    );\n  }\n}\n\nexport default Navigation;\n","import React from 'react';\nimport ImageGrid from './ImageGrid';\n\nclass Food extends React.Component {\n\n  render() {\n    return (\n        <div>\n            <h1>FOOOOOD</h1>\n            <p>üç¥yumü•Ñ</p>\n            <ImageGrid></ImageGrid>\n        </div>\n    );\n  }\n}\n\nexport default Food;\n","import React from 'react';\n\nclass Current extends React.Component {\n  render() {\n    return (\n        <div>\n            <h1>NOT THE NEWS ¬Ø\\_(„ÉÑ)_/¬Ø</h1>\n            <p>Does this count as a blog?ü§î Let me know in the comments below, kidding no feedback is accepted.</p>\n        </div>\n    );\n  }\n}\n\nexport default Current;\n","import React from 'react';\nimport '../css/App.css';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\n\nimport Home from './Home';\nimport Doodles from './Doodles';\nimport Error from './Error';\nimport Navigation from './Navigation';\nimport Food from './Food';\nimport Current from './Current';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <BrowserRouter>\n        <div>\n          <Navigation />\n            <Switch>\n             <Route path=\"/ByMeForMe\" component={Home} exact/>\n             <Route path=\"/ByMeForMe/doodles\" component={Doodles}/>\n             <Route path=\"/ByMeForMe/food\" component={Food}/>\n             <Route path=\"/ByMeForMe/current\" component={Current}/>\n             <Route component={Error}/>\n           </Switch>\n        </div> \n      </BrowserRouter>\n      </div>\n      \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}